import logging
import sqlite3
import asyncio
from datetime import datetime

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters
)

# ===== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø =====
TOKEN = "7738250304:AAFFsDvI5dy_pbwHDPYdnd2Nk73gRNv6EMs"  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
CHANNEL_NAME = "@Sugrefftea"  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
CHANNEL_LINK = "https://t.me/Sugrefftea"  # –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
BOT_USERNAME = "@SugreffTeaBot"  # –ò–º—è –±–æ—Ç–∞ –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
ADMIN_ID = 7971829199  # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_USERNAME = "tg://user?id=7971829199"  # –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
# =======================

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('bot.db', check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
cursor.execute('''
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    username TEXT,
    subscribed BOOLEAN DEFAULT 0
)
''')

cursor.execute('''
CREATE TABLE IF NOT EXISTS screenshots (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    file_id TEXT,
    verified BOOLEAN DEFAULT 0
)
''')

cursor.execute('''
CREATE TABLE IF NOT EXISTS participants (
    user_id INTEGER PRIMARY KEY,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
)
''')
conn.commit()

# ===== –¢–ï–ö–°–¢–´ =====
TEXTS = {
    "start": (
        "üåü *–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à –ø—Ä–∏–∑–æ–≤!* üåü\n\n"
        "*–ö–∞–∫ –≤—ã–∏–≥—Ä–∞—Ç—å –∫—Ä—É—Ç—ã–µ –ø—Ä–∏–∑—ã –æ—Ç –°—É–≥—Ä–µ–≤—ä:*\n"
        "1Ô∏è‚É£ *–û—Å—Ç–∞–≤—å –æ—Ç–∑—ã–≤* –Ω–∞ —Ç–æ–≤–∞—Ä –°—É–≥—Ä–µ–≤—ä –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ –∏ *–æ—Ç–ø—Ä–∞–≤—å —Å–∫—Ä–∏–Ω—à–æ—Ç* –æ—Ç–∑—ã–≤–∞ –≤ —ç—Ç–æ—Ç —á–∞—Ç\n"
        "   _(–∑–∞–≥—Ä—É–∑–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞)_ ‚¨áÔ∏è\n\n"
        f"‚ùì *–í–æ–ø—Ä–æ—Å—ã?* –ü–∏—à–∏ [–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É]({ADMIN_USERNAME})\n"
        "üéÅ *–†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –µ–∂–µ–º–µ—Å—è—á–Ω–æ!*"
    ),
    "photo_received": (
        "‚úÖ *–û—Ç–ª–∏—á–Ω–æ! –¢–≤–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!*\n\n"
        "–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ:\n"
        "1. *–ü–æ–¥–ø–∏—à–∏—Å—å* –Ω–∞ [–Ω–∞—à –∫–∞–Ω–∞–ª]({channel_link})\n"
        "2. *–ù–∞–∂–º–∏* –∫–Ω–æ–ø–∫—É ¬´–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è¬ª –Ω–∏–∂–µ\n"
        "3. –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—ã —Å–º–æ–∂–µ—à—å *—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å* –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ\n\n"
        "–ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–≤–æ–π –æ—Ç–∑—ã–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤. –£–¥–∞—á–∏! üçÄ"
    ),
    "not_subscribed": (
        "üîî *–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª!*\n\n"
        "–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n"
        "1. *–ü–µ—Ä–µ–π—Ç–∏* –Ω–∞ [–Ω–∞—à –∫–∞–Ω–∞–ª]({channel_link})\n"
        "2. *–ù–∞–∂–∞—Ç—å* –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è¬ª\n"
        "3. *–í–µ—Ä–Ω—É—Ç—å—Å—è* —Å—é–¥–∞ –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è¬ª\n\n"
        "–¢–∞–º —Ç—ã –Ω–∞–π–¥–µ—à—å –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∞–Ω–æ–Ω—Å—ã –±—É–¥—É—â–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π! üì±"
    ),
    "check_subscription": "üîÑ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è",
    "participate_success": (
        "üéâ *–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã –≤ –∏–≥—Ä–µ!* üéâ\n\n"
        "–¢–≤–æ—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –ø—Ä–∏–Ω—è—Ç–∞!\n\n"
        "‚Ä¢ –†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è *–µ–∂–µ–º–µ—Å—è—á–Ω–æ*\n"
        "‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã –≤ [–Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ]({channel_link})\n"
        "‚Ä¢ –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º–∏ –ª–∏—á–Ω–æ\n\n"
        "–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –∏ —É–¥–∞—á–∏! üçÄ"
    ),
    "participate_error": (
        "‚ö†Ô∏è *–£–ø—Å! –ù–µ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã*\n\n"
        "–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n"
        "1. ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞\n"
        "2. ‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ [–Ω–∞—à –∫–∞–Ω–∞–ª]({channel_link})\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞! üôè"
    ),
    "subscription_error": (
        "‚ö†Ô∏è *–í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏*\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Å—å —á—Ç–æ:\n"
        "‚Ä¢ –¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ [–Ω–∞—à –∫–∞–Ω–∞–ª]({channel_link})\n"
        "‚Ä¢ –ù–µ –æ—Ç–∫–ª—é—á–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞\n\n"
        f"–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∏–ª–∏ –Ω–∞–ø–∏—à–∏ [–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É]({ADMIN_USERNAME}) –¥–ª—è –ø–æ–º–æ—â–∏."
    ),
    "already_participating": (
        "‚ú® *–¢—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ!* ‚ú®\n\n"
        "–¢–≤–æ—è –∑–∞—è–≤–∫–∞ —É–∂–µ –ø—Ä–∏–Ω—è—Ç–∞, –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.\n"
        "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã –≤ [–Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ]({channel_link}).\n\n"
        "–ñ–µ–ª–∞–µ–º —É–¥–∞—á–∏! üçÄ"
    ),
    "channel_announcement": (
        "üéÅ *–í–ù–ò–ú–ê–ù–ò–ï! –†–û–ó–´–ì–†–´–® –ü–†–ò–ó–û–í!* üéÅ\n\n"
        "–†–∞–∑—ã–≥—Ä—ã–≤–∞–µ–º –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –°—É–≥—Ä–µ–≤—ä!\n\n"
        "–î–ª—è —É—á–∞—Å—Ç–∏—è:\n"
        "1. –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ü–∏—é –°—É–≥—Ä–µ–≤—ä –Ω–∞ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ\n"
        f"2. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –±–æ—Ç—É {BOT_USERNAME}\n"
        "3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å¬ª –Ω–∏–∂–µ\n\n"
        "–†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –µ–∂–µ–º–µ—Å—è—á–Ω–æ!"
    )
}

# ===== –ö–õ–ê–í–ò–ê–¢–£–†–´ =====
def get_subscription_keyboard():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton(text="üì¢ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∫–∞–Ω–∞–ª", url=CHANNEL_LINK)],
        [InlineKeyboardButton(text=TEXTS["check_subscription"], callback_data="check_subscription")]
    ])

def get_participate_keyboard():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton(text="üéØ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å", callback_data="participate")]
    ])

# ===== –ö–û–ú–ê–ù–î–´ –ò –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò =====
async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    cursor.execute('INSERT OR IGNORE INTO users (user_id, username) VALUES (?, ?)', 
                  (user.id, user.username))
    conn.commit()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await update.message.reply_text(
        TEXTS["start"].format(channel_link=CHANNEL_LINK),
        parse_mode="Markdown"
    )
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = update.effective_user
    
    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —Å –Ω–∞–∏–ª—É—á—à–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º
    photo = update.message.photo[-1]
    file_id = photo.file_id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
    cursor.execute('INSERT INTO screenshots (user_id, file_id) VALUES (?, ?)',
                  (user.id, file_id))
    conn.commit()
    
    # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(
        TEXTS["photo_received"].format(channel_link=CHANNEL_LINK),
        parse_mode="Markdown",
        reply_markup=get_subscription_keyboard()
    )
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–∫—Ä–∏–Ω—à–æ—Ç")

async def button_check_subscription(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    query = update.callback_query
    await query.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–∞–ø—Ä–æ—Å
    
    user = query.from_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª
        chat_member = await context.bot.get_chat_member(chat_id=CHANNEL_NAME, user_id=user.id)
        logger.info(f"–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {chat_member.status}")
        
        if chat_member.status in ['member', 'administrator', 'creator']:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω
            cursor.execute('UPDATE users SET subscribed = 1 WHERE user_id = ?', (user.id,))
            conn.commit()
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø–æ–¥–ø–∏—Å–∫—É. –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ë–î.")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ
            await query.message.reply_text(
                text=TEXTS["participate_success"].format(channel_link=CHANNEL_LINK),
                parse_mode="Markdown"
            )
            # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
            try:
                await query.edit_message_reply_markup(reply_markup=None)
            except Exception:
                pass
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª. –°—Ç–∞—Ç—É—Å: {chat_member.status}")
            await query.message.reply_text(
                text=TEXTS["not_subscribed"].format(channel_link=CHANNEL_LINK),
                parse_mode="Markdown",
                reply_markup=get_subscription_keyboard()
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {e}", exc_info=True)
        await query.message.reply_text(
            text=TEXTS["subscription_error"].format(channel_link=CHANNEL_LINK),
            parse_mode="Markdown",
            reply_markup=get_subscription_keyboard()
        )

async def button_participate(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ"""
    query = update.callback_query
    await query.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–∞–ø—Ä–æ—Å
    
    user = query.from_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–ø–æ–ª–Ω–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ —É—Å–ª–æ–≤–∏—è
    cursor.execute('SELECT subscribed FROM users WHERE user_id = ?', (user.id,))
    sub_result = cursor.fetchone()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if not sub_result:
        cursor.execute('INSERT OR IGNORE INTO users (user_id, username) VALUES (?, ?)', 
                      (user.id, user.username))
        conn.commit()
        subscribed = False
    else:
        subscribed = sub_result[0] == 1
    
    cursor.execute('SELECT id FROM screenshots WHERE user_id = ?', (user.id,))
    has_screenshot = cursor.fetchone() is not None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    cursor.execute('SELECT user_id FROM participants WHERE user_id = ?', (user.id,))
    already_participating = cursor.fetchone() is not None
    
    logger.info(f"–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: –ø–æ–¥–ø–∏—Å–∞–Ω = {subscribed}, —Å–∫—Ä–∏–Ω—à–æ—Ç = {has_screenshot}, —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç = {already_participating}")
    
    if already_participating:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç
        try:
            await context.bot.send_message(
                chat_id=user.id,
                text=TEXTS["already_participating"].format(channel_link=CHANNEL_LINK),
                parse_mode="Markdown"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}: {e}")
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
            await query.answer("‚ú® –í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ!", show_alert=True)
    elif subscribed and has_screenshot:
        # –í—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
        cursor.execute('INSERT OR IGNORE INTO participants (user_id) VALUES (?)', (user.id,))
        conn.commit()
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞")
        
        try:
            await context.bot.send_message(
                chat_id=user.id,
                text=TEXTS["participate_success"].format(channel_link=CHANNEL_LINK),
                parse_mode="Markdown"
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}: {e}")
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
            await query.answer("‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ!", show_alert=True)
    else:
        # –ù–µ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
        missing_items = []
        if not subscribed:
            missing_items.append("–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª")
        if not has_screenshot:
            missing_items.append("—Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞")
        
        missing_text = ", ".join(missing_items)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª —É—Å–ª–æ–≤–∏—è: {missing_text}")
        
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await context.bot.send_message(
                chat_id=user.id,
                text=TEXTS["participate_error"].format(channel_link=CHANNEL_LINK),
                parse_mode="Markdown",
                reply_markup=get_subscription_keyboard()
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}: {e}")
            # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ
            await query.answer(
                f"‚ö†Ô∏è –ù–µ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {missing_text}. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –Ω–∞–ø—Ä—è–º—É—é.",
                show_alert=True
            )

async def send_channel_message(bot):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π —É—á–∞—Å—Ç–∏—è –≤ –∫–∞–Ω–∞–ª"""
    try:
        message = await bot.send_message(
            chat_id=CHANNEL_NAME,
            text=TEXTS["channel_announcement"],
            parse_mode="Markdown",
            reply_markup=get_participate_keyboard()
        )
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π —É—á–∞—Å—Ç–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {CHANNEL_NAME}, message_id: {message.message_id}")
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª {CHANNEL_NAME}: {e}", exc_info=True)
        return False

async def post_init(application: Application) -> None:
    """–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª
    await asyncio.sleep(5)  # –î–∞–µ–º –±–æ—Ç—É –≤—Ä–µ–º—è –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    
    # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
    success = await send_channel_message(application.bot)
    
    if success:
        logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª")
    else:
        logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª. –í–æ–∑–º–æ–∂–Ω–æ, —É –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –∫–∞–Ω–∞–ª–µ?")
        
    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = (
        Application.builder()
        .token(TOKEN)
        .post_init(post_init)
        .build()
    )
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", cmd_start))
    application.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    application.add_handler(CallbackQueryHandler(button_check_subscription, pattern="check_subscription"))
    application.add_handler(CallbackQueryHandler(button_participate, pattern="participate"))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)
    
if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã
        conn.close()
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ.")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        conn.close()
